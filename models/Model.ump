class AssetPlus
{
  1 <@>- * User;
  1 <@>- * MaintenanceTicket;
  1 <@>- * AssetType;
}

class User
{
  abstract;
  unique immutable email;
  password;
  lazy name;
  lazy phoneNumber;
  1 -- * MaintenanceTicket;
}

class Manager
{
  isA User;
  1 assignsTicket -- * AssignedTicket assignedTickets;
  0..1 -- 1 AssignedTicket isAssigned;
}

class Employee
{
  isA User;
  0..1 -- 1 AssignedTicket isAssigned;
  
}

class Guest
{
 	isA User;
}

class HotelAsset
{
  autounique number;
  Date purchaseDate;
  1 -- * MaintenanceTicket maintenanceHistory;
}

class AssetType 
{ 
  unique name;
  Integer lifespan;
  1 <@>- * HotelAsset;
}

class MaintenanceTicket
{
  autounique ticketNumber;
  description;
  Date dateCreated;
  State state;
  boolean isApprovalRequired;
}

class AssignedTicket
{
  isA MaintenanceTicket;
  Date dateAssigned;
  TimeEstimate timeEstimate;
  1 <@>- * Note;
  1 <@>- * Image;
  PriorityLevel priority;
}

class Note
{ 
  User author;
  text;
  Date dateCreated; 
}

class Image
{ 
  url;
}

class Location
{
  Integer floor;
  Integer room;
  1 -- * HotelAsset;
}

enum PriorityLevel
{
  URGENT,
  NORMAL,
  LOW
}

enum TimeEstimate
{
  LESS_THAN_A_DAY,
  ONE_TO_THREE_DAYS,
  THREE_TO_SEVEN_DAYS,
  ONE_TO_THREE_WEEKS,
  THREE_PLUS_WEEKS
}

enum State
{
  open,
  closed,
  resolved
}


